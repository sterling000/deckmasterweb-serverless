service: user-service
# app and org for use with dashboard.serverless.com
app: user-service-app
org: sterling000

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
iamRoleStatements:
- Effect: Allow
  Action: 
    - "dynamodb:Query"
    - "dynamodb:PutItem"
  Resource:
    - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodb.userTable}
    - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodb.userTable}/index/pk

# you can define service wide environment variables here
environment:
  DYNAMODB_USER_TABLE: ${self:custom.dynamodb.userTable}

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  createUser:
    handler: services/user-service/src/functions/createUser.createUser
    events:
     - http:
         path: /v1/users
         method: post
         cors: true
         request:
          schema:
            application/json: ${file(services/user-service/src/schema/create_user_request.json)}


#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

resources:
  Resources:
    userTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.dynamodb.userTable}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-pseudo-parameters
  - serverless-mocha

custom:
  dynamodb:
    userTable: ${self:service}-userTable-${self:provider.stage}
  serverless-mocha-plugin:
    testTemplate: services/template/templates/test-template.ejs
    functionTemplate: services/template/templates/function-template.ejs